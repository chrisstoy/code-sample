Target RWE Code Test

Notepad app utilizing Angular, Express.js, and PostgeSQL

Each user can create, edit, and delete Notes.




Each component deployed in a Docker container

Two user types:
	Admin - access to user list and all data
	User - access to only user profile and todo list for that user
	
	
Express Server
- basic authentication 
- REST API for updating database and providing data
-- https://jasonwatmore.com/post/2018/09/24/nodejs-basic-authentication-tutorial-with-example-api

Database
- PostgreSQL
- 


API
/users
	GET /users	- returns list of all users in the system
	PUT /users	- create a new user. Returns the new user record
		User: {
			id: string?,
			first_name: string,
			last_name: string,
			email: string,
			password: string
		}

	GET /users/{{user-id}}	- returns details for the specified user
		User

	POST /users/{{user-id}} - edit an existing user
		User

	POST /users/{{user-id}}/password - change a user's password
		Password: {
			old_password: string,
			new_password: string
		}

	DELETE /users/{{user-id}} - delete a user and all of their notes from the system

	POST /users/authenticate	- authenticate a login attempt and return basic auth token if successful
		Auth {
			user_id: string,
			password: string	// 
		}

	POST /users/logout - removes the valid token for the currently logged in user
		Empty

/notes
	GET /notes/{{userid}}	- return list of all Notes for this user
		[ Note: {
			id: string
			last_update: Date,
			text: string
		}]

	PUT /notes/{{user-id}}	- create a new note
		Note: {
			id: string?,
			last_update: Date,
			text: string
		}
